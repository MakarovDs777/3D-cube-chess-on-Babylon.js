        const canvas = document.getElementById('renderCanvas');
        const engine = new BABYLON.Engine(canvas, true);

        const createScene = async () => {
            const scene = new BABYLON.Scene(engine);

            // Камера с возможностью вращения
            const camera = new BABYLON.ArcRotateCamera('camera', Math.PI / 2, Math.PI / 2, 5, BABYLON.Vector3.Zero(), scene);
            camera.attachControl(canvas, true);

            // Свет
            const light = new BABYLON.HemisphericLight('light', new BABYLON.Vector3(1, 1, 0), scene);

            // Создание куба
            const box = BABYLON.MeshBuilder.CreateBox('box', { size: 2 }, scene);

            // Создание материала и загрузка текстуры
            const material = new BABYLON.StandardMaterial('material', scene);
            const textureUrl = 'https://i.postimg.cc/63FJT0hZ/Joxi.jpg';
            const texture = new BABYLON.Texture(textureUrl, scene, false, true, undefined, undefined, undefined, () => {
                // Обработка окончания загрузки текстуры
                document.getElementById('loading').style.display = 'none'; // Скрыть индикатор загрузки
                box.material = material; // Назначаем материал на куб
            });

            material.diffuseTexture = texture; // Назначаем текстуру материалу

            box.material = material; // Применяем материал к кубу

            // Запуск цикла рендеринга
            engine.runRenderLoop(() => {
                scene.render();
            });

            window.addEventListener('resize', () => {
                engine.resize();
            });
        };

        createScene();
/*
const canvas = document.getElementById("renderCanvas");
const engine = new BABYLON.Engine(canvas, true);

const createScene = () => {
    const scene = new BABYLON.Scene(engine);
    const camera = new BABYLON.ArcRotateCamera("camera", Math.PI / 2, Math.PI / 4, 5, BABYLON.Vector3.Zero(), scene);
    camera.attachControl(canvas, true);
    scene.clearColor = new BABYLON.Color3(1, 1, 1); // Белый фон

    const light = new BABYLON.DirectionalLight("light", new BABYLON.Vector3(0, -1, -1), scene);
    light.intensity = 0.7;

    // Создание куба
    const box = BABYLON.MeshBuilder.CreateBox("box", { size: 2 }, scene);

    // Создание материалов для каждой грани
    const materials = [];
    const textureUrls = [
        "https://i.postimg.cc/63FJT0hZ/Joxi.jpg", // Передняя грань
        "https://i.postimg.cc/SsX111Xv/Joxi.jpg", // Задняя грань
        "https://i.postimg.cc/63FJT0hZ/Joxi.jpg", // Левая грань
        "https://i.postimg.cc/SsX111Xv/Joxi.jpg", // Правая грань
        "https://i.postimg.cc/63FJT0hZ/Joxi.jpg", // Верхняя грань
        "https://i.postimg.cc/SsX111Xv/Joxi.jpg", // Нижняя грань
    ];

    for (let i = 0; i < 6; i++) {
        const material = new BABYLON.StandardMaterial(`material${i}`, scene);
        material.diffuseTexture = new BABYLON.Texture(textureUrls[i], scene);
        materials.push(material);
    }

    // Применение материалов к граням куба
    box.material = new BABYLON.MultiMaterial("multiMaterial", scene);
    box.material.subMaterials = materials;

    // Создание шахматной фигуры
    const vertices = [[-0.049173, 0.129672, 0.034767], [-0.049449, 0.129672, -0.008699], [-0.01891, 0.129672, -0.039629], [0.024555, 0.129672, -0.0399], [0.055486, 0.129672, -0.00936], [0.055756, 0.129672, 0.034105], [0.025217, 0.129672, 0.06503], [-0.018248, 0.129672, 0.065306], [-0.069381, 0.049806, 0.043286], [-0.069761, 0.049806, -0.016965], [-0.027429, 0.049806, -0.059832], [0.032822, 0.049806, -0.060211], [0.075688, 0.049806, -0.017879], [0.076068, 0.049806, 0.042366], [0.033736, 0.049806, 0.085238], [-0.026509, 0.049806, 0.085618], [-0.051652, 0.110482, 0.035808], [-0.05194, 0.110482, -0.009711], [-0.019951, 0.110482, -0.042108], [0.025568, 0.110482, -0.04239], [0.057965, 0.110482, -0.010407], [0.058247, 0.110482, 0.035118], [0.026264, 0.110482, 0.067509], [-0.019261, 0.110482, 0.067797], [-0.076888, 0.070877, 0.04645], [-0.077308, 
0.070877, -0.020037], [-0.030593, 0.070877, -0.067339], [0.035893, 0.070877, -0.067758], [0.083195, 0.070877, -0.021043], [0.083615, 0.070877, 0.045437], [0.0369, 0.070877, 0.092745], [-0.02958, 0.070877, 0.093165], [-0.086483, 0.047821, 0.050494], [-0.087812, 0.042581, 0.051057], [-0.088289, 0.042581, -0.0245], [-0.086955, 0.047821, -0.02396], [-0.035201, 0.042581, -0.078268], [-0.034637, 0.047821, -0.076939], [0.040357, 0.042581, -0.078746], [0.039817, 0.047821, -0.077405], [0.094125, 0.042581, -0.025651], [0.092796, 0.047821, -0.025093], [0.094602, 0.042581, 0.049907], [0.093262, 0.047821, 0.04936], [0.041508, 0.042581, 0.103669], [0.04095, 0.047821, 0.10234], [-0.03405, 0.042581, 0.104146], [-0.033504, 0.047821, 0.102812], [-0.07109, 0.017926, 0.044005], [-0.072862, 0.018634, 0.044753], [-0.071475, 0.017926, -0.017661], [-0.073264, 0.018634, -0.018391], [-0.028148, 0.017926, -0.06154], [-0.028896, 0.018634, -0.063318], [0.033518, 0.017926, -0.061931], [0.034248, 0.018634, -0.063715], [0.077397, 0.017926, -0.018598], [0.079174, 0.018634, -0.019352], [0.077788, 0.017926, 0.043067], [0.079571, 0.018634, 0.043792], [0.034455, 0.017926, 0.086947], [0.035209, 0.018634, 0.088718], [-0.02721, 0.017926, 0.087332], [-0.027935, 0.018634, 0.089121], [-0.040556, 0.129672, -0.00508], [-0.040326, 0.129672, 0.031033], [-0.015176, 0.129672, -0.030782], [0.020937, 0.129672, -0.031006], [0.046639, 0.129672, -0.005633], [0.046863, 0.129672, 0.030487], [0.021489, 0.129672, 0.056183], [-0.01463, 0.129672, 0.056413], [-0.026175, 0.180823, 0.00077], [-0.02602, 0.180823, 0.025005], [-0.009148, 0.180823, -0.016476], [0.015087, 0.180823, -0.016625], [0.032333, 0.180823, 0.000402], [0.032482, 0.180823, 0.024637], [0.015455, 0.180823, 0.041877], [-0.00878, 0.180823, 0.042032], [-0.023259, 0.228056, 0.001955], [-0.023121, 0.228056, 0.02378], [-0.007923, 0.228056, -0.013577], [0.013902, 0.228056, -0.013715], [0.029433, 0.228056, 0.001621], [0.029571, 0.228056, 0.023446], [0.014236, 0.228056, 0.038977], [-0.007589, 0.228056, 0.039115], [-0.023259, 0.25347, 0.001955], [-0.023121, 0.25347, 0.02378], [-0.007923, 0.25347, -0.013577], [0.013902, 0.25347, -0.013715], [0.029433, 0.25347, 0.001621], [0.029571, 0.25347, 0.023446], [0.014236, 0.25347, 0.038977], [-0.007589, 0.25347, 0.039115], [-0.015665, 0.233348, 0.058955], [-0.015665, 0.248178, 0.058955], [-0.042857, 0.248178, 0.032103], [-0.042857, 0.233348, 0.032103], [0.049412, 0.233348, 0.031522], [0.049412, 0.248178, 0.031522], [0.022554, 0.248178, 0.058714], [0.022554, 0.233348, 0.058714], [0.021973, 0.233348, -0.033555], [0.021973, 0.248178, -0.033555], [0.04917, 0.248178, -0.006697], [0.04917, 0.233348, -0.006697], [-0.043099, 0.233348, -0.006116], [-0.043099, 0.248178, -0.006116], [-0.016246, 0.248178, -0.033313], [-0.016246, 0.233348, -0.033313], [0.036463, 0.25798, -0.001341], [0.036463, 0.264589, -0.001341], [0.036641, 0.264589, 0.026322], [0.036641, 0.25798, 
0.026322], [-0.010891, 0.25798, -0.020606], [-0.010891, 0.264589, -0.020606], [0.016778, 0.264589, -0.020784], [0.016778, 0.25798, -0.020784], [-0.030156, 0.25798, 0.026748], [-0.030156, 0.264589, 0.026748], [-0.030328, 0.264589, -0.000921], [-0.030328, 0.25798, -0.000921], [-0.010465, 0.25798, 0.046185], [-0.010465, 0.264589, 0.046185], [0.017198, 0.264589, 0.046013], [0.017198, 0.25798, 0.046013], [-0.042391, 0.331938, -0.005828], [-0.036995, 0.304051, -0.003636], [-0.012133, 0.364215, -0.023557], [-0.015947, 0.331938, -0.032606], [-0.013687, 0.304051, -0.027244], [0.017986, 0.364215, -0.023747], [0.021685, 0.331938, -0.032847], [0.019493, 0.304051, -0.027451], [0.039414, 0.364215, -0.00259], [0.048462, 0.331938, -0.006403], [0.043101, 0.304051, -0.004137], [0.039604, 0.364215, 0.02753], [0.048704, 0.331938, 0.031235], [0.043308, 0.304051, 0.029037], [0.018446, 0.364215, 0.048964], [0.02226, 0.331938, 0.058012], [0.019994, 0.304051, 0.052645], [-0.015378, 0.331938, 0.058248], [-0.01318, 0.304051, 0.052852], [-0.033107, 0.364215, 0.02799], [-0.042155, 0.331938, 0.031804], [-0.036788, 0.304051, 0.029543], [-0.026739, 0.280564, 0.00054], [-0.009384, 0.280564, -0.017034], [0.015317, 0.280564, -0.017189], [0.032891, 0.280564, 0.000166], [0.033046, 0.280564, 0.024861], [0.015691, 0.280564, 0.042435], [-0.009004, 0.280564, 0.042596], [-0.026578, 0.280564, 0.025241], [0.030722, 0.270083, 0.001081], [0.030866, 0.270083, 0.023975], [-0.008469, 0.270083, -0.014865], [0.014431, 0.270083, -0.015009], [-0.024415, 0.270083, 0.024326], [-0.024559, 0.270083, 0.001426], [-0.008118, 0.270083, 0.040415], [0.014776, 0.270083, 0.040272], [0.039368, 0.27809, -0.002566], [0.039558, 0.27809, 0.027513], [-0.012116, 0.27809, -0.023511], [0.017969, 0.27809, -0.023701], [-0.033061, 0.27809, 0.027973], [-0.03325, 0.27809, -0.002112], [-0.011656, 0.27809, 0.049107], [0.018423, 0.27809, 0.048918], [0.017946, 0.273954, -0.023649], [-0.012093, 0.273954, -0.023459], [-0.033009, 0.273954, 0.02795], [-0.011633, 0.273954, 0.049056], [0.039316, 0.273954, -0.002543], [0.0184, 0.273954, 0.048866], [0.039506, 0.273954, 0.02749], [-0.033199, 0.273954, -0.002089], [-0.008498, 0.41502, 0.017613], [-0.008498, 0.398028, 0.017613], [-0.008561, 0.41502, 0.007937], [-0.013416, 0.407853, 0.005959], [-0.008561, 0.398028, 0.007937], [-0.001756, 0.41502, 0.001046], [-0.003792, 0.407853, -0.00378], [-0.001756, 0.398028, 0.001046], [0.007919, 0.41502, 0.000988], [0.009898, 0.407853, -0.003867], [0.007919, 0.398028, 0.000988], [0.003156, 0.420261, 0.0127], [0.014811, 0.41502, 0.007788], [0.019637, 0.407853, 0.005751], [0.014811, 0.398028, 0.007788], [0.014868, 0.41502, 0.017469], [0.019723, 0.407853, 0.019442], [0.014868, 0.398028, 0.017469], [0.008069, 0.41502, 0.024355], [0.010105, 0.407853, 0.029187], [0.008069, 0.398028, 0.024355], [-0.001612, 0.41502, 0.024418], [-0.003585, 0.407853, 0.029273], [-0.001612, 0.398028, 0.024418], [-0.01333, 0.407853, 0.019649], [-0.009079, 0.331938, 0.058208], [-0.006594, 0.318604, 0.055619], [-0.013859, 0.34514, 0.054526], [-0.035482, 0.331938, -0.012829], [-0.035454, 0.331823, -0.012823], [-0.030167, 0.368259, 0.026748], [-0.026083, 0.364215, 0.034922], [-0.037007, 0.351042, -0.003636], [-0.033181, 0.364215, 0.015824], [0.010669, 0.321285, 0.056027], [-0.022925, 0.336672, -0.023643], [-0.025128, 0.364215, -0.010401], [0.008679, 0.331938, 0.058098], [-0.003016, 0.364215, 0.049096], [-0.023943, 0.376997, 0.001679], [-0.018392, 0.384435, 0.021789], [-0.008555, 0.374702, 0.041485], [-0.035212, 0.331938, -0.013099], [-0.062082, 0.094387, 0.013115], [-0.043265, 0.094381, -0.033135], [0.002742, 0.094387, -0.052532], [0.002673, 0.059821, -0.063599], [0.048992, 0.094381, -0.033716], [0.056769, 0.059821, -0.041591], [0.079456, 0.059821, 
0.012223], [0.068389, 0.094387, 0.012292], [0.049573, 0.094387, 0.058536], [0.057448, 0.059821, 0.066313], [0.003565, 0.094387, 0.077938], [0.003634, 0.059821, 0.089006], [-0.050462, 0.059821, 0.066997], [-0.042684, 0.094387, 0.059122], [-0.034562, 0.120302, 0.050896], [0.00349, 
0.120302, 0.066382], [0.056832, 0.120302, 0.012367], [0.041352, 0.120302, 0.050419], [-0.079885, 0.029535, 0.013224], [-0.05519, 0.029535, 0.071795], [0.00368, 0.029535, 0.095742], [0.062245, 0.029535, 0.071053], [0.086198, 0.029535, 0.012177], [0.061503, 0.029535, -0.046388], [0.002633, 0.029535, -0.070341], [-0.055932, 0.029535, -0.045646], [0.003156, 0.017926, 0.0127], [0.002702, 0.018277, -0.062616], [0.056067, 0.018277, -0.040906], [0.078473, 0.018277, 0.012246], [0.056757, 0.018277, 0.065611], [0.003668, 0.018277, 0.088017], [-0.049789, 0.018277, 0.066273], [-0.050525, 0.120296, 0.01304], [-0.035039, 0.120302, -0.025018], [0.002817, 0.120296, -0.040975], [0.040875, 0.120302, -0.025496], [0.036618, 0.129672, -0.021181], [0.050775, 0.129672, 0.012401], [0.043544, 0.349869, 0.012447], [0.045724, 0.317114, 0.012436], [0.037337, 0.290584, 0.012488], [0.027173, 0.290584, -0.011621], [0.036693, 0.229977, 0.012488], [0.027017, 0.229977, 0.036268], [0.003369, 0.229977, 0.046237], [-0.020411, 0.229977, 0.036567], [-0.03038, 0.229977, 0.012913], [-0.02071, 0.229977, -0.010867], [0.002944, 0.229977, -0.020836], [0.026724, 0.229977, -0.011166], [0.002978, 0.205673, -0.01502], [-0.016574, 0.205673, -0.006777], [-0.024564, 0.205673, 0.012879], [-0.016327, 0.205673, 0.032431], [0.003329, 0.205679, 0.040427], [0.022881, 0.205673, 0.032178], [0.030877, 0.205673, 0.012528], [0.022634, 0.205673, -0.007025], [0.002932, 0.160281, -0.022309], [-0.021757, 0.160281, -0.011897], [-0.030731, 0.129672, -0.020756], [-0.020607, 0.261287, 
-0.010764], [0.002944, 0.261287, -0.020698], [0.02662, 0.261287, -0.011063], [0.036549, 0.261287, 0.012488], [0.033403, 0.267598, 0.012511], [0.024676, 0.267598, 0.033956], [0.003369, 0.261287, 0.046099], [0.003341, 0.25546, 0.042158], [0.003346, 0.267598, 0.042952], [-0.018099, 
0.267598, 0.034226], [-0.029264, 0.240763, 0.045529], [0.003444, 0.240763, 0.058835], [-0.022666, 0.276019, -0.012794], [0.002926, 0.276019, -0.02358], [0.028651, 0.276019, -0.013116], [0.039437, 0.276019, 0.01247], [0.028973, 0.276019, 0.038195], [0.026454, 0.279448, 0.03571], [0.003358, 0.279448, 0.045443], [-0.019847, 0.279448, 0.036003], [-0.029586, 0.279448, 0.012902], [-0.020147, 0.279448, -0.010303], [0.002949, 0.279448, -0.020042], [0.002938, 0.290584, -0.02148], [0.033069, 0.31712, -0.017592], [0.002886, 0.317114, -0.029867], [-0.027136, 0.317114, -0.017212], [-0.024783, 0.331938, -0.023655], [-0.019663, 0.345002, -0.023615], [-0.009792, 0.386408, -0.002889], [-0.012496, 0.39258, 0.013488], [0.00307, 0.402095, -0.000985], [0.012774, 0.4021, 0.002962], [0.016841, 0.402095, 0.01262], [0.016841, 0.412052, 0.012614], [0.020839, 0.389802, 0.012591], [0.031895, 0.349869, 0.041083], [0.015737, 0.389807, 0.025126], [0.004623, 0.387518, 0.032046], [-0.002331, 0.380759, 0.037027], [0.012464, 0.34445, 0.054561], [0.003243, 0.4021, 0.026391], [0.012895, 0.402095, 0.022324], [0.012895, 0.412052, 0.022318], 
[0.003243, 0.412052, 0.026391], [-0.006467, 0.412052, 0.022445], [-0.010534, 0.412052, 0.012787], [-0.006582, 0.412052, 0.003082], [0.00307, 0.412052, -0.00099], [0.012774, 0.412046, 0.002962], [-0.03313, 0.276019, 0.01293], [-0.026756, 0.317114, 0.042993], [-0.009027, 0.331674, 
0.058156], [-0.010178, 0.32404, 0.056689], [-0.014555, 0.339112, 0.056229], [-0.012007, 0.335769, 0.057149], [-0.011248, 0.331938, 0.058219], [-0.025979, 0.364054, 0.035089], [-0.029345, 0.35737, 0.034404], [-0.030415, 0.364215, 0.030648], [-0.033135, 0.364215, 0.022882], [-0.038462, 0.345652, 0.006367], [0.002898, 0.349869, -0.027687], [0.003041, 0.389807, -0.004983], [0.015582, 0.389802, 0.00012], [0.031533, 0.349869, -0.016039], [-0.026302, 0.25546, 0.012884], [-0.030242, 0.261287, 0.012913], [-0.027095, 0.267598, 0.012896], [-0.018887, 0.271757, 0.035025], [0.003352, 0.271757, 0.044068], [0.049291, 0.240763, 0.012413], [0.002863, 0.240763, -0.033434], [-0.029673, 0.240763, -0.019714], [-0.042978, 0.240763, 0.012994], [-0.021447, 0.160287, 0.037614], [-0.030305, 0.129672, 0.046594], [0.037038, 0.129672, 0.046162], [0.003456, 
0.129672, 0.060325], [0.060358, 0.04892, 0.069189], [0.06756, 0.045221, 0.076333], [0.093688, 0.045221, 0.012125], [0.059645, 0.04892, -0.044507], [0.066772, 0.045221, -0.051715], [0.002575, 0.045221, -0.077831], [-0.054051, 0.04892, -0.043788], [0.00265, 0.04892, -0.067695], [-0.077239, 0.04892, 0.013212], [-0.073149, 0.059821, 0.013184], [-0.05114, 0.059821, -0.040912], [0.003663, 0.04892, 0.093096], [0.003726, 0.045221, 0.103237], [-0.053338, 0.04892, 0.069908], [-0.02071, 0.251548, -0.010867], [0.002944, 0.251548, -0.020836], [0.036693, 0.251548, 0.012488], [0.026724, 0.251548, -0.011166], [0.035571, 0.240763, -0.020129], [0.035985, 0.240763, 0.045115], [0.027017, 0.251548, 0.036268], [-0.03038, 0.251548, 0.012913], [-0.020411, 0.251548, 0.036567], [0.003369, 0.251548, 0.046237], [0.032614, 0.25546, 0.012516], [0.024118, 0.25546, 0.033398], [0.02692, 0.261287, 0.036164], [0.002967, 0.267598, -0.017546], [0.002955, 0.271757, -0.018662], [-0.018369, 0.267598, -0.008549], [-0.019169, 0.271757, -0.009337], [-0.028211, 0.271757, 0.012902], [-0.020308, 0.261287, 0.036469], [0.003387, 0.276019, 0.048987], 
[-0.022338, 0.276019, 0.038523], [0.033449, 0.31712, 0.042613], [0.015691, 0.280564, 0.042435], [0.027478, 0.290584, 0.036717], [0.015691, 0.280564, 0.042435], [0.003369, 0.290584, 0.046881], [-0.02086, 0.290584, 0.037022], [-0.03103, 0.290584, 0.012919], [-0.039411, 0.31712, 0.012971], [-0.021165, 0.290584, -0.011316], [-0.014141, 0.326951, 0.018994], [-0.030012, 0.33394, -0.017557], [-0.030012, 0.331938, -0.018363], [-0.031554, 0.345221, 0.006994], [-0.013836, 0.360723, 0.01755], [0.035893, 0.279448, 0.012493], [0.02616, 0.279448, -0.010597], [0.024406, 0.267598, -0.008819], [0.025194, 0.271757, -0.009619], [0.025476, 0.271757, 0.034744], [0.034524, 0.271757, 0.012505], [-0.017805, 0.25546, -0.007997], [0.002967, 0.25546, -0.016752], [0.023854, 0.25546, -0.008261], [0.002852, 0.129672, -0.034918], [-0.044468, 0.129672, 0.013], [-0.031858, 0.160281, 0.012925], [0.003375, 0.160281, 0.047715], [0.02807, 0.160281, 0.037303], [0.038166, 0.160281, 0.012482], [0.027759, 
0.160281, -0.012213], [-0.07216, 0.018277, 0.013241], [-0.05041, 0.018277, -0.04025]]; // Укажите свои данные
    const faces =  [[24, 31, 238], [26, 25, 226], [27, 26, 227], [28, 27, 229], [29, 28, 232], [30, 29, 233], [31, 30, 235], [46, 44, 378], [0, 7, 363], [49, 51, 431], [33, 46, 47, 32], [25, 24, 225], [51, 53, 432], [17, 258, 1], [31, 237, 15], [16, 239, 0], [47, 15, 379], [63, 46, 244], [31, 15, 236], [23, 22, 240], [15, 377, 14], [46, 245, 44], [30, 14, 234], [22, 21, 242], [14, 366, 13], [44, 246, 42], [29, 13, 231], [21, 20, 241], [13, 43, 41, 12], [42, 247, 40], [28, 12, 230], [20, 261, 4], [12, 369, 11], [40, 248, 38], [27, 11, 228], [19, 260, 3], [11, 373, 10], [38, 249, 36], [26, 10, 376], [18, 259, 2], [48, 251, 62], [44, 42, 367], [42, 40, 368], [40, 370, 41], [38, 36, 371], [36, 34, 35, 37], 
[34, 33, 32, 35], [9, 35, 374], [10, 372, 9], [53, 55, 252], [55, 57, 253], [57, 59, 254], [59, 61, 255], [61, 63, 256], [63, 49, 257], [34, 51, 243], [36, 250, 34], [25, 9, 375], [71, 70, 427], [6, 364, 70], [4, 262, 68], [2, 286, 66], [7, 6, 365], [5, 263, 69], [3, 424, 67], [1, 425, 64], [76, 75, 283], [69, 68, 429], [67, 284, 75], [64, 426, 72], [65, 362, 73], [70, 69, 428], [68, 67, 430], [66, 64, 285], [98, 97, 388], [74, 277, 82], [79, 280, 87], [77, 76, 282], [75, 74, 276], [72, 73, 278], [73, 79, 279], [78, 77, 281], [102, 101, 386], [106, 105, 
383], [110, 109, 380], [97, 102, 389], [101, 106, 382], [105, 110, 381], [109, 98, 387], [80, 272, 108], [108, 99, 361], [83, 274, 104], [104, 359, 105], [85, 268, 100], [100, 358, 101], [87, 270, 96], [96, 103, 298], [82, 273, 111], [111, 108, 360], [84, 83, 275], [107, 104, 384], [86, 269, 103], [103, 100, 385], [81, 271, 99], [99, 96, 297], [95, 294, 124], [124, 293, 125], [90, 421, 116], [116, 287, 117], [92, 91, 423], [112, 289, 113], [94, 391, 127], [127, 115, 392], [89, 95, 124, 120], [120, 398, 121], [88, 353, 123], [123, 120, 354], [91, 422, 119], [119, 116, 288], [93, 390, 115], [115, 112, 290], [149, 148, 408], [157, 149, 407], [189, 192, 350], [150, 409, 151], [151, 310, 152], [131, 130, 349], [132, 131, 312], [192, 196, 351], [152, 267, 153], [134, 352, 137], [135, 311, 138], [196, 199, 322], [153, 266, 154], [137, 
264, 140], [138, 265, 141], [199, 202, 324], [154, 403, 402, 155], [140, 323, 143], [141, 401, 144], [155, 402, 404, 405, 156], [146, 145, 338], [156, 406, 157], [114, 291, 159], [118, 393, 161], [122, 355, 163], [121, 296, 162], [126, 292, 165], [113, 417, 158], [117, 122, 395], [125, 295, 164], [174, 175, 300], [176, 177, 400], [178, 174, 301], [177, 179, 399], [180, 178, 302], [181, 176, 337], [179, 180, 303], [175, 181, 299], [172, 305, 156], [173, 304, 155], [167, 415, 154], [166, 169, 416], [169, 309, 152], [168, 308, 151], [171, 307, 150], [170, 306, 157], [160, 163, 396], [165, 419, 179], [163, 162, 397], [159, 158, 420], [164, 165, 357], [158, 418, 178], [162, 356, 176], [161, 394, 
174], [206, 182, 333], [183, 206, 185, 186], [182, 193, 184], [185, 334, 188], [186, 185, 188, 189], [184, 193, 187], [188, 335, 191], [189, 188, 318], [187, 193, 190], [191, 336, 195], [192, 191, 319], [190, 193, 194], [194, 193, 197], [195, 194, 321], [196, 195, 320], [199, 198, 329], [197, 193, 200], [198, 197, 330], [202, 328, 205], [200, 193, 203], [201, 331, 204], [205, 204, 206, 183], [203, 193, 182], [204, 332, 206], [212, 213, 344, 413, 214, 215], [221, 218, 217, 414], [224, 211, 410, 411], [186, 316, 221], [128, 348, 214], [128, 214, 210], [218, 130, 315], [131, 313, 412, 314], [220, 142, 325], [143, 327, 219], [145, 343, 342, 341], [145, 340, 343], [223, 205, 183, 222], [147, 346, 212], [147, 345, 346], [183, 317, 222], [215, 347, 212], [16, 17, 225], [225, 17, 25], [225, 24, 16], [18, 226, 17], [17, 226, 25], [226, 18, 26], [18, 19, 227], [227, 26, 18], [227, 19, 27], [26, 228, 10], [10, 228, 11], [228, 26, 27], [19, 20, 229], [229, 20, 28], [229, 27, 19], [27, 230, 11], [230, 27, 28], [11, 230, 12], [28, 231, 12], [231, 28, 29], [12, 231, 13], [20, 21, 232], [232, 21, 29], [232, 28, 20], [21, 22, 233], [233, 29, 21], [233, 22, 30], [13, 29, 234], [234, 14, 13], [234, 29, 30], [14, 30, 236], [22, 23, 235], [235, 23, 31], [235, 30, 22], [236, 15, 14], [236, 30, 31], [8, 237, 24], [15, 237, 8], [24, 237, 31], [23, 16, 238], [238, 16, 24], [238, 31, 23], [7, 239, 23], 
[23, 239, 16], [0, 239, 7], [6, 7, 240], [240, 22, 6], [240, 7, 23], [5, 6, 242], [4, 5, 241], [241, 5, 21], [241, 20, 4], [242, 6, 22], [242, 21, 5], [33, 243, 49], [243, 33, 34], [49, 243, 51], [49, 244, 33], [33, 244, 46], [244, 49, 63], [61, 245, 63], [63, 245, 46], [44, 245, 61], [42, 246, 59], [59, 246, 61], [246, 44, 61], [40, 247, 57], [247, 42, 59], [57, 247, 59], [38, 248, 55], [248, 40, 57], [55, 248, 57], [36, 249, 53], [53, 249, 55], [249, 38, 55], [34, 250, 51], [250, 36, 53], [51, 250, 53], [56, 251, 54], [58, 251, 56], [50, 251, 48], [60, 251, 58], [62, 251, 60], [54, 251, 52], [52, 251, 50], [54, 52, 252], [252, 55, 54], [252, 52, 53], [54, 253, 56], [56, 253, 57], [253, 54, 55], [58, 56, 254], [254, 56, 57], [254, 59, 58], [60, 58, 255], [255, 61, 60], [255, 58, 59], [62, 60, 256], [256, 60, 61], [256, 63, 62], [48, 62, 257], [257, 62, 63], [257, 49, 48], [0, 258, 16], [1, 258, 0], [16, 258, 17], [1, 259, 17], [2, 259, 1], [17, 259, 18], [2, 260, 18], [18, 260, 19], [3, 260, 2], [3, 261, 19], [4, 261, 3], [19, 261, 20], [67, 262, 3], [68, 262, 67], [3, 262, 4], [69, 263, 68], [68, 263, 4], [263, 5, 4], [140, 264, 139], [264, 137, 136], [139, 264, 136], [141, 265, 140], [265, 138, 137], [140, 265, 137], [154, 266, 141], [141, 266, 138], [266, 153, 138], [138, 267, 135], [153, 267, 138], [135, 267, 152], [100, 268, 107], [268, 85, 84], [107, 268, 84], [103, 269, 100], [100, 269, 85], [269, 86, 85], [103, 270, 86], [96, 270, 103], [86, 270, 87], [99, 271, 96], [271, 81, 87], [96, 271, 87], [108, 272, 99], [99, 272, 81], [272, 80, 81], [111, 273, 108], [273, 82, 80], [108, 273, 80], [104, 274, 111], [274, 83, 82], [111, 274, 82], [107, 275, 104], [104, 275, 83], [275, 107, 84], [83, 276, 82], [82, 276, 74], [276, 83, 75], [80, 277, 72], [82, 277, 80], [72, 277, 74], [80, 278, 81], [278, 80, 72], [81, 278, 73], [81, 279, 87], [87, 279, 79], [279, 81, 73], [86, 280, 78], [78, 280, 79], [87, 280, 86], [85, 86, 281], [281, 77, 85], [281, 86, 78], [84, 85, 282], [282, 85, 77], [282, 76, 84], [84, 283, 83], [83, 283, 75], [283, 84, 76], [75, 284, 74], [284, 67, 66], [74, 284, 66], [72, 74, 285], [285, 74, 66], [285, 64, 72], [66, 286, 64], [286, 2, 1], [64, 286, 1], [122, 287, 123], [123, 287, 116], [117, 287, 122], [118, 288, 117], [117, 288, 116], [288, 118, 119], [118, 289, 119], [119, 289, 112], [113, 289, 118], [113, 114, 290], [290, 112, 113], [290, 114, 115], [158, 291, 113], [159, 291, 158], [113, 291, 114], [165, 292, 159], [159, 292, 114], [292, 126, 114], [125, 293, 126], [293, 124, 127], [126, 293, 127], [127, 294, 94], [124, 294, 127], [94, 294, 95], [165, 295, 126], [126, 295, 125], [164, 295, 165], [162, 296, 164], [164, 296, 125], [296, 121, 125], [121, 398, 125], [97, 98, 297], [297, 96, 97], [297, 98, 99], [97, 298, 102], [102, 298, 103], [298, 97, 96], [171, 168, 299], [299, 181, 171], [299, 168, 175], [168, 169, 300], [300, 169, 174], [300, 175, 168], [169, 166, 301], [301, 174, 169], [301, 166, 178], [167, 302, 166], [302, 167, 180], [166, 302, 178], [167, 173, 303], [303, 173, 179], [303, 180, 167], [154, 304, 167], [167, 304, 173], [155, 304, 154], [156, 305, 155], [305, 172, 173], [155, 305, 173], [157, 306, 156], [156, 306, 172], [306, 170, 172], [157, 307, 170], [170, 307, 171], [150, 307, 157], [151, 308, 150], [308, 168, 171], [150, 308, 171], [151, 309, 168], [168, 309, 169], [152, 309, 151], [152, 310, 135], [135, 310, 132], [310, 151, 132], [137, 311, 134], [134, 311, 135], [138, 311, 137], [135, 312, 134], [134, 312, 131], [312, 135, 132], [128, 313, 129], [313, 131, 132], [129, 313, 132], [217, 131, 314], [314, 412, 411, 217], [217, 
315, 131], [315, 217, 218], [131, 315, 130], [218, 316, 130], [130, 316, 189], [316, 186, 189], [221, 316, 218], [221, 317, 186], [186, 317, 183], [222, 317, 221], [192, 318, 191], [191, 318, 188], [318, 192, 189], [196, 319, 195], [319, 196, 192], [195, 319, 191], [199, 320, 198], [320, 199, 196], [198, 320, 195], [197, 198, 321], [321, 198, 195], [321, 194, 197], [136, 322, 139], [139, 322, 199], [322, 136, 196], [143, 323, 142], [323, 140, 139], [142, 323, 139], [142, 139, 324], [324, 139, 199], [324, 202, 142], [202, 205, 325], [325, 205, 326], [325, 142, 202], [223, 220, 326], [326, 220, 325], [326, 205, 223], [219, 327, 220], [220, 327, 142], [327, 143, 142], [204, 328, 201], [201, 328, 202], [205, 328, 204], [201, 202, 329], [329, 198, 201], [329, 202, 199], [200, 201, 330], [330, 201, 198], [330, 197, 200], [204, 331, 203], [203, 331, 200], [331, 201, 200], [206, 332, 182], [182, 332, 203], [332, 204, 203], [185, 333, 184], [184, 333, 182], [333, 185, 206], 
[188, 334, 187], [334, 185, 184], [187, 334, 184], [191, 335, 190], [335, 188, 187], [190, 335, 187], [195, 336, 194], [336, 191, 190], [194, 336, 190], [170, 171, 337], [337, 171, 181], [337, 176, 170], [148, 149, 338], [338, 149, 146], [338, 145, 148], [216, 144, 143, 219], [208, 146, 144, 216], [339, 340, 208], [340, 145, 146], [208, 340, 146], [341, 342, 209], [342, 343, 207], [209, 342, 207], [343, 340, 339, 207], [145, 345, 148], [148, 345, 147], [344, 345, 145, 341, 209], [212, 346, 213], [346, 345, 213], [347, 348, 148, 147], [212, 347, 147], [214, 348, 215], [148, 348, 128], [215, 348, 347], [213, 345, 344], [134, 349, 133], [133, 349, 130], [349, 134, 131], [133, 130, 350], [350, 192, 133], [350, 130, 189], [136, 133, 351], [351, 196, 136], [351, 133, 192], [137, 352, 136], [136, 352, 133], [352, 134, 133], [120, 353, 
89], [89, 353, 88], [123, 353, 120], [121, 122, 354], [354, 120, 121], [354, 122, 123], [162, 355, 121], [121, 355, 122], [163, 355, 162], [177, 356, 164], [176, 356, 177], [164, 356, 162], [179, 177, 357], [357, 165, 179], [357, 177, 164], [106, 358, 107], [101, 358, 106], [107, 358, 100], [110, 359, 111], [111, 359, 104], [105, 359, 110], [109, 110, 360], [360, 108, 109], [360, 110, 111], [98, 109, 361], [361, 99, 
98], [361, 109, 108], [79, 362, 71], [71, 362, 65], [73, 362, 79], [71, 65, 363], [363, 7, 71], [363, 65, 0], [70, 364, 69], [364, 6, 5], [69, 364, 5], [71, 365, 70], [70, 365, 6], [365, 71, 7], [13, 366, 43], [366, 14, 45], [43, 366, 45], [43, 45, 367], [367, 42, 43], [367, 45, 
44], [43, 368, 41], [41, 368, 40], [368, 43, 42], [11, 369, 39], [39, 369, 41], [369, 12, 41], [39, 370, 38], [41, 370, 39], [38, 370, 40], 
[39, 371, 37], [37, 371, 36], [371, 39, 38], [10, 373, 37], [35, 372, 37], [9, 372, 35], [37, 372, 10], [37, 373, 39], [373, 11, 39], [8, 374, 32], [374, 8, 9], [32, 374, 35], [24, 375, 8], [375, 24, 25], [8, 375, 9], [25, 376, 9], [9, 376, 10], [376, 25, 26], [14, 377, 45], [45, 377, 47], [377, 15, 47], [45, 47, 378], [378, 44, 45], [378, 47, 46], [8, 32, 379], [379, 32, 47], [379, 15, 8], [88, 90, 380], [380, 90, 110], [380, 109, 88], [90, 91, 381], [381, 110, 90], [381, 91, 105], [92, 93, 382], [382, 106, 92], [382, 93, 101], [91, 92, 383], [383, 92, 
106], [383, 105, 91], [105, 106, 384], [384, 106, 107], [384, 104, 105], [101, 102, 385], [385, 100, 101], [385, 102, 103], [93, 94, 386], [386, 101, 93], [386, 94, 102], [95, 89, 388], [89, 88, 387], [387, 98, 89], [387, 88, 109], [388, 89, 98], [388, 97, 95], [94, 95, 389], [389, 95, 97], [389, 102, 94], [115, 390, 112], [390, 93, 92], [112, 390, 92], [115, 391, 93], [127, 391, 115], [93, 391, 94], [114, 126, 392], [392, 126, 127], [392, 115, 114], [160, 393, 117], [161, 393, 160], [117, 393, 118], [175, 394, 160], [174, 394, 175], [160, 394, 161], [181, 175, 396], [163, 160, 395], [395, 122, 163], [395, 160, 117], [396, 175, 160], [396, 163, 181], [176, 181, 397], [397, 162, 176], [397, 181, 163], [398, 120, 124], [125, 398, 124], [173, 172, 399], [399, 179, 173], [399, 172, 177], [172, 170, 400], [400, 170, 176], [400, 177, 
172], [144, 401, 143], [143, 401, 140], [401, 141, 140], [402, 403, 144, 404], [403, 154, 141], [144, 403, 141], [156, 405, 146], [146, 405, 144], [405, 404, 144], [157, 406, 149], [406, 156, 146], [149, 406, 146], [150, 407, 129], [407, 150, 157], [129, 407, 149], [129, 408, 128], [408, 129, 149], [128, 408, 148], [151, 409, 132], [132, 409, 129], [409, 150, 129], [216, 410, 208], [217, 410, 216], [208, 410, 211], [411, 412, 224], [412, 313, 128, 210, 211, 224], [411, 410, 217], [210, 413, 208, 211], [214, 413, 210], [208, 413, 344, 209, 207, 339], [223, 414, 216, 219, 220], [216, 414, 217], [414, 223, 222, 221], [154, 415, 153], [415, 167, 166], [153, 415, 166], [153, 416, 152], [416, 153, 166], [152, 416, 169], [161, 417, 118], [118, 417, 113], [158, 417, 161], [174, 418, 161], [178, 418, 174], [161, 418, 158], [179, 419, 180], [180, 419, 159], [419, 165, 159], [180, 420, 178], [178, 420, 158], [420, 180, 159], [116, 421, 123], [123, 421, 88], [421, 90, 88], [116, 422, 90], [90, 422, 91], [119, 422, 116], [119, 112, 423], [423, 112, 92], [423, 91, 119], [66, 424, 2], [67, 424, 66], [2, 424, 3], [65, 
425, 0], [0, 425, 1], [64, 425, 65], [73, 426, 65], [65, 426, 64], [72, 426, 73], [78, 79, 427], [427, 70, 78], [427, 79, 71], [77, 78, 428], [428, 69, 77], [428, 78, 70], [76, 77, 429], [429, 77, 69], [429, 68, 76], [75, 76, 430], [430, 76, 68], [430, 67, 75], [48, 431, 50], [431, 48, 49], [50, 431, 51], [52, 50, 432], [432, 50, 51], [432, 53, 52]];

    const chessPiece = createMeshFromArrays(vertices, faces, scene);
    chessPiece.position.y = 1; // Поднимаем фигуру над плоскостью

    const chessPieceMaterial = new BABYLON.StandardMaterial("chessPieceMaterial", scene);
    chessPieceMaterial.diffuseColor = new BABYLON.Color3(1, 0, 0); // Красный цвет
    chessPiece.material = chessPieceMaterial;

    // Обработчик событий для перемещения фигуры
    window.addEventListener("keydown", (event) => {
        const moveDistance = 0.1;
        switch (event.key) {
            case "ArrowUp":
                chessPiece.position.z -= moveDistance;
                break;
            case "ArrowDown":
                chessPiece.position.z += moveDistance;
                break;
            case "ArrowLeft":
                chessPiece.position.x -= moveDistance;
                break;
            case "ArrowRight":
                chessPiece.position.x += moveDistance;
                break;
        }
    });

    return scene;
};

const createMeshFromArrays = (vertices, faces, scene) => {
    const positions = [];
    const indices = [];
    const uvs = [];

    vertices.forEach(vertex => {
        positions.push(vertex[0], vertex[1], vertex[2]);
    });

    faces.forEach(face => {
        indices.push(face[0], face[1], face[2]);
        indices.push(face[2], face[1], face[0]);
    });

    const uv1 = [0, 0, 1, 0, 1, 1, 0, 1];
    uvs.push(...uv1);

    const mesh = new BABYLON.Mesh("customMesh", scene);
    const vertexData = new BABYLON.VertexData();
    vertexData.positions = positions;
    vertexData.indices = indices;
    vertexData.uvs = uvs;

    vertexData.applyToMesh(mesh);

    const material = new BABYLON.StandardMaterial("material", scene);
    material.diffuseTexture = new BABYLON.Texture("https://i.postimg.cc/y83ChCs2/image.png", scene);
    material.backFaceCulling = false;

    mesh.material = material;

    return mesh;
};

const scene = createScene();
engine.runRenderLoop(() => {
    scene.render();
});

window.addEventListener("resize", () => {
    engine.resize();
});*/
